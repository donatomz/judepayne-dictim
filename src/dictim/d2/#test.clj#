(ns dictim.d2.test)

(def grammar "<D2> = elements\n    elements = <sep*> (element (empty-lines | <sep>))* element <sep*>\n    <contained> = <sep*> (element (empty-lines | <sep>))* element <sep*>\n    <element> = list | elem\n\n    <elem> = ctr |comment | attr | conn\n\n    list = (elem <semi>+)+ elem <semi>*\n    ctr = key colon-label? (<curlyo> <sep*> contained <s> <curlyc>)?\n    comment = <s> <hash> label\n\n    attrs = <curlyo> <at-sep*> (attr <at-sep+>)* attr <at-sep*> <s> <curlyc>\n    attr = <s> at-key <s> <colon> <s> (val | attr-label? attrs)\n    attr-label = label\n \n    conn = <s> (ekey dir)+ <s> key colon-label? attrs?\n    dir = <contd?> <s> direction\n    contd = #'--\\\\\n'\n    <direction> = '--' | '->' | '<-' | '<->'\n \n    (* keys *)\n    K = key | at-key\n    key = !hash (key-part period)* key-part-last\n    <key-part> = #'^(?!.*(?:-[>-]|<-))[^\\'\\\";:.\\n]+'\n    <key-part-last> = <s> #'^(?!(?:font-color|font-color[:;.\n>][\\s\\S]*|width|width[:;.\n>][\\s\\S]*|height|height[:;.\n>][\\s\\S]*|shape|shape[:;.\n>][\\s\\S]*|tooltip|tooltip[:;.\n>][\\s\\S]*|label|label[:;.\n>][\\s\\S]*|stroke-width|stroke-width[:;.\n>][\\s\\S]*|stroke-dash|stroke-dash[:;.\n>][\\s\\S]*|shadow|shadow[:;.\n>][\\s\\S]*|3d|3d[:;.\n>][\\s\\S]*|stroke|stroke[:;.\n>][\\s\\S]*|style|style[:;.\n>][\\s\\S]*|direction|direction[:;.\n>][\\s\\S]*|fill|fill[:;.\n>][\\s\\S]*|filled|filled[:;.\n>][\\s\\S]*|font|font[:;.\n>][\\s\\S]*|animated|animated[:;.\n>][\\s\\S]*|link|link[:;.\n>][\\s\\S]*|double-border|double-border[:;.\n>][\\s\\S]*|font-size|font-size[:;.\n>][\\s\\S]*|italic|italic[:;.\n>][\\s\\S]*|border-radius|border-radius[:;.\n>][\\s\\S]*|source-arrowhead|source-arrowhead[:;.\n>][\\s\\S]*|target-arrowhead|target-arrowhead[:;.\n>][\\s\\S]*|bold|bold[:;.\n>][\\s\\S]*|underline|underline[:;.\n>][\\s\\S]*|opacity|opacity[:;.\n>][\\s\\S]*|near|near[:;.\n>][\\s\\S]*|constraint|constraint[:;.\n>][\\s\\S]*|multiple|multiple[:;.\n>][\\s\\S]*|icon|icon[:;.\n>][\\s\\S]*)$|.*(?:--|->|<-))[^:;.\n>]+'\n    at-key = (at-part period)* at-part-last\n    <at-part> = key-part | d2-keyword\n    <at-part-last> = d2-keyword\n    ekey = !hash (ekey-part period)* ekey-part-last\n    <ekey-part> = #'^[^;:.\\n\\-<]+'\n    <ekey-part-last> = <s> #'^(?!(?:font-color|font-color[ ].*|width|width[ ].*|height|height[ ].*|shape|shape[ ].*|tooltip|tooltip[ ].*|label|label[ ].*|stroke-width|stroke-width[ ].*|stroke-dash|stroke-dash[ ].*|shadow|shadow[ ].*|3d|3d[ ].*|stroke|stroke[ ].*|style|style[ ].*|direction|direction[ ].*|fill|fill[ ].*|filled|filled[ ].*|font|font[ ].*|animated|animated[ ].*|link|link[ ].*|double-border|double-border[ ].*|font-size|font-size[ ].*|italic|italic[ ].*|border-radius|border-radius[ ].*|source-arrowhead|source-arrowhead[ ].*|target-arrowhead|target-arrowhead[ ].*|bold|bold[ ].*|underline|underline[ ].*|opacity|opacity[ ].*|near|near[ ].*|constraint|constraint[ ].*|multiple|multiple[ ].*|icon|icon[ ].*)$)[^.\\-<>\n]+'\n\n    (* labels *)\n    <labels> = label | block | typescript\n    label = <s> #'^(?!^\\s*$)[^;|{}\\n]+'\n    val = <s> #'^(?!^\\s*$)[^;|{}\\n]+'\n    <colon-label> = (<colon> <s> | <colon> labels)\n    block = <s> '|' #'[^|]+' '|'\n    typescript = <s> ts-open ts ts-close <s>\n    <ts> = #'[\\s\\S]+?(?=\\|\\|\\||`\\|)'\n    ts-open = '|||' | '|`'\n    ts-close = '|||' | '`|'\n \n    (* building blocks *)\n    <any> = #'.'\n    <any-key> = #'[^.:;{\\n]'\n    empty-lines = sep sep+\n    sep = <#'[^\\S\\r\\n]*\\r?\\n'>\n    <at-sep> = sep | semi\n    colon = ':'\n    <semi> = ';'\n    <hash> = '#'\n    curlyo = '{'\n    curlyc = '}'\n    <period> = '.'\n\n    s = #' *'\n    <d2-keyword> ='font-color'|'width'|'height'|'shape'|'tooltip'|'label'|'stroke-width'|'stroke-dash'|'shadow'|'3d'|'stroke'|'style'|'direction'|'fill'|'filled'|'font'|'animated'|'link'|'double-border'|'font-size'|'italic'|'border-radius'|'source-arrowhead'|'target-arrowhead'|'bold'|'underline'|'opacity'|'near'|'constraint'|'multiple'|'icon'")

(require '[instaparse.core :as insta])

#_(require '[babashka.pods :as pods])

#_(pods/load-pod 'org.babashka/instaparse "0.0.1")

#_(require '[pod.babashka.instaparse :as insta])

(def parser (insta/parser grammar))

(prn (insta/parse parser "s1: Shape 1\ns2: Shape 2\ns1 -> s2: reln"))



24706387a55c59c559f7d3e82a2ca00b90966476





