
"<D2> = elements
    <elements> = <sep?> (element <sep>)* element <sep?>
    <element> = list | elem

    sep = #'\\r?\\n'+; colon = ':'; hash = '#'

    list = (elem <#';+'>)+ elem <#';*'>
    <elem> = conn | shape | comment | attr | ctr

    conn = (key dir)+ key <colon?> !hash label? attrs?
    dir = <contd?> direction
    contd = #'--\\\\\n'
    <direction> = '--' | '->' | '<-' | '<->'

    shape = key <colon?> !hash label-plus? attrs?

    comment = <hash> cmt

    attrs = <'{'> <sep?> (attr <sep?>)* attr <sep?> <s> <'}'>
    attr = d2-word <':'> (val | in-attr-label? attrs)
    d2-word = (label '.')* d2-key
    in-attr-label = label
    val = label

    (* ctr attrs are inside { } *)
    ctr = key <colon?> !hash label? <'{'> elements <'}'>

    <label-plus> = label | block | typescript
    block = '|' #'[^|]+' '|'
    typescript = ts-open #'(.*(?!(\\|\\|\\||`\\|)))' ts-close
    ts-open = '|||' | '|`'; ts-close = '|||' | '`|'

    key = #'^(?:(?!:)(?!;)(?!\\n)(?!--)(?!<-)(?!->)(?!<->)(?!\\{)(?!#).)*'

    label = #'[a-zA-Z0-9 :_\\?!\\-`\\',.\"#/\\\\]+'
    cmt = #'[^\\n;]+'

    els = (el nsep*)* el nsep*
    el = sh | cmt
    <nsep> = <'\\n'> | <';'>
    sh = (!key-delim #'.')+ (key-delim | key-delim lab)?
    cmt = '#' lab
    lab = lbl*
    <lbl> = #'.'   
    key-delim = ':' | '#'
    
    d2-key ="