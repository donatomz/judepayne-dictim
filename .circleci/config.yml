version: 2.1

jobs:
  test:
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0

    working_directory: ~/project
    steps:
      # Checkout the code as the first step.
      - checkout
      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "deps.edn" }}-{{ checksum "bb.edn" }}
           # fallback to using the latest cache if no exact match is found
           - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.11.1.1149.sh
            chmod +x linux-install-1.11.1.1149.sh
            sudo ./linux-install-1.11.1.1149.sh
      - run:
          name: run clj tests
          command: |
            clojure -X:test
      - run:
          name: install babashka
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: run bb tests
          command: |
            bb test:bb
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}-{{ checksum "bb.edn" }}
      - run:
          name: echo TOKEN
          command: printenv GITHUB_TOKEN

  mac:
    macos:
      xcode: "14.0.0"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java17-22.3.0/Contents/Home
      APP_PLATFORM: macos # used in release script
      APP_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf ~/.gitconfig
      - restore_cache:
          keys:
            - mac-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java17-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java17-darwin-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java17-darwin-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
     # - run:
      #    name: Release
      #    command: |
      #      curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install
      #      chmod +x install
      #      sudo ./install
      #      .circleci/script/release
      - run:
          name: Run tests
          command: #TODO
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java17-22.3.0
          key: mac-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release


  release:
    docker:
      - image: cimg/clojure:1.11.1-openjdk-17.0

    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "deps.edn" }}-{{ checksum "bb.edn" }}
           # fallback to using the latest cache if no exact match is found
           - v1-dependencies-
      - run:
          name: install babashka
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: build bb uberjar
          command: |
            bb build
      - run:
          name: release artifact
          command: |
            .circleci/script/release
      - run:
          name: install bbin
          command: |
            mkdir -p ~/.local/bin && curl -o- -L https://raw.githubusercontent.com/babashka/bbin/v0.2.1/bbin > ~/.local/bin/bbin && chmod +x ~/.local/bin/bbin
            echo 'export PATH="$PATH:$HOME/.local/bin"' >> ~/.$(basename $SHELL)rc && exec $SHELL
      - run:
          name: install dictim via bbin
          command: |
            bbin install https://github.com/judepayne/dictim/releases/latest/download/dictim.jar
      - run:
          name: run dictim command tests
          command: |
            bb cmd-test

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}-{{ checksum "bb.edn" }}
      

workflows:
  test-and-release-on-main:
    jobs:
      - test
      - mac:
          requires:
	    - test
      - release:
          requires:
            - test
          filters:
            branches:
              only: main
